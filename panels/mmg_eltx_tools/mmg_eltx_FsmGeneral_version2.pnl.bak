V 14
2
LANG:10001 0 
LANG:1 0 
PANEL,-1 -1 439 596 N "_3DFace" 0
"# uses \"mdtPs_datapointHandling.ctl\"
# uses \"mdtPs_fsmHandling.ctl\"

main()
{
  //addSymbol(myModuleName(), myPanelName(), \"/objects/mdtPs/mdtPs_pirforosTr.pnl\", \"pirforos\", makeDynString(\"\"), 110, 10, 0, 1.2, 1.2);
}" 0
 E E E E 1 -1 -1 0  30 50
""0  1
E E 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:10001 0 
13 12
"PUSH_BUTTON7"
""
1 52 492 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
19 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  50 490 212 514

T 
2
LANG:10001 25 Set alias HV channels DPs
LANG:1 25 Set alias HV channels DPs
"main()
{  
  //\"ATLMDTPS2:CAEN/PSMDT02/branchController00/easyCrate0/easyBoard01/channel000.:_common\"
  // PS_HV__<chamber>_<ml>
  workingText.text(\"Working...\");
  workingState.color(\"advanceAlarmWentUna\");

  dyn_string allChannels =  mdtPs_getAllChannels();
  dyn_string chamber = mdtPs_getChambersOfChannel(allChannels[1]);
  int dpSetStatus;
  //   dpSetAlias(allChannels[1] + \".:_common\", \"PS_HV__\"+mdtPs_removeSystemName(chamber[1])+\"_\"+chamber[dynlen(chamber)]);
  DebugN(\"----- Start of alias setting -----\");
  for (int c=1; c<=dynlen(allChannels); c++){
    dyn_string chamber = mdtPs_getChambersOfChannel(allChannels[c]);
    if (chamber[dynlen(chamber)] != \"LV\"){
      dpSetStatus = dpSetAlias(allChannels[c] + \".:_common\", \"PS_HV__\"+mdtPs_removeSystemName(chamber[1])+\"_\"+chamber[dynlen(chamber)]);
      DebugN(allChannels[c] + \".:_common\");
      if (dpSetStatus == 0) DebugN(\"Alias set for PS_HV__\"+mdtPs_removeSystemName(chamber[1])+\"_\"+chamber[dynlen(chamber)]); 
      else DebugN(\"Problem for \"+mdtPs_removeSystemName(chamber[1])+\"_\"+chamber[dynlen(chamber)]); 
    }
  }
  DebugN(\"----- End of alias setting -----\");
  workingState.color(\"_Button\");
  workingText.text(\"DONE!\");
  workingText.color(\"black\");
}" 0
 E E E
13 0
"PUSH_BUTTON1"
""
1 52 172 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
0 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  50 170 382 194

T 
2
LANG:10001 34 Create FSM tree for current system
LANG:1 34 Create FSM tree for current system
"main()
{
  string sys = getSystemName();
  
  if (sys == \"ATLMDTPS2:\")
    mdtPs_createFsmTree(\"B\");
  else if (sys == \"ATLMDTPS3:\")
    mdtPs_createFsmTree(\"E\");
  DebugN(\"----- FSM creation has finished -----\");
}" 0
 E E E
13 1
"Button6"
""
1 353.75 1060 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
2 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
2
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
0  308 548 382 582

T 
2
LANG:10001 5 Close
LANG:1 5 Close
"main()
{
 PanelOff();
}" 0
 E E E
2 2
"PRIMITIVE_TEXT1"
""
1 42 132 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
3 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  1 E 42 132 477 193
0 2 2 "0s" 0 0 0 192 0 0  42 132 4
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 74 To build up the FSM tree from scratch make sure you have stopped and THEN 
LANG:1 74 To build up the FSM tree from scratch make sure you have stopped and THEN 
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 58 removed the previous FSM tree before applying this button:
LANG:1 58 removed the previous FSM tree before applying this button:
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 0 
LANG:1 0 
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 0 
LANG:1 0 
2 3
"PRIMITIVE_TEXT2"
""
1 34 212 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
4 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  1 E 34 212 475 257
0 2 2 "0s" 0 0 0 192 0 0  34 212 3
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 77 To give nicer and smaller names to the nodes apply the following button AFTER
LANG:1 77 To give nicer and smaller names to the nodes apply the following button AFTER
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 28 having STOPPED the FSM tree:
LANG:1 28 having STOPPED the FSM tree:
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 0 
LANG:1 0 
2 5
"PRIMITIVE_TEXT3"
""
1 32 292 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
8 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  1 E 32 292 431 353
0 2 2 "0s" 0 0 0 192 0 0  32 292 4
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 71 Every node should also "see" the corresponding panel. To do this apply 
LANG:1 71 Every node should also "see" the corresponding panel. To do this apply 
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 55 the following button AFTER having STOPPED the FSM tree:
LANG:1 55 the following button AFTER having STOPPED the FSM tree:
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 0 
LANG:1 0 
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 0 
LANG:1 0 
13 8
"PUSH_BUTTON4"
""
1 55 250 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
14 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  53 248 387 272

T 
2
LANG:10001 19 Set labels to nodes
LANG:1 19 Set labels to nodes
"main()
{
  string partition = mdtPs_getSystemPartition();
  dyn_string side = makeDynString(\"A\", \"C\");
  dyn_string layers, sectorChambers, exceptionInfo;
  string sector;
  
  if (partition == \"B\")
    layers = makeDynString(\"INNER\", \"MIDDLE\", \"OUTER\");
  else if (partition == \"E\")
    layers = makeDynString(\"INNER\", \"MIDDLE\", \"OUTER\", \"EE\");
  
  for (int s=1; s<=dynlen(side); s++)
  {
    fwFsmTree_setNodeLabel(\"MDTPS_\" + partition + side[s], \"PS  \" + partition + side[s]);
    for(int l=1; l<=dynlen(layers); l++)
    {
      fwFsmTree_setNodeLabel(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l], layers[l]);
      for (int n=1; n<=16; n++)
      {
        if (n<10)
          sector = \"0\" + n;
        else
          sector = n;
        fwFsmTree_setNodeLabel(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l] + \"_SECTOR\" + sector, \"SECTOR\" + sector);
        fwTree_getChildren(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l] + \"_SECTOR\" + sector, sectorChambers, exceptionInfo);
//         DebugN(sectorChambers);
        for (int s=2; s<=dynlen(sectorChambers); s++) //to exclude the status from the children...
        {
          fwFsmTree_setNodeLabel(sectorChambers[s], strltrim(sectorChambers[s], \"MDTPS_\"));
//           DebugN(sectorChambers[s]);
        }
      }
      if ((layers[l] == \"MIDDLE\") || (layers[l] == \"OUTER\")) {
        fwFsmTree_setNodeLabel(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l] + \"_RPC\", \"RPC\");
        fwTree_getChildren(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l] + \"_RPC\", sectorChambers, exceptionInfo);
        for (int s=2; s<=dynlen(sectorChambers); s++) //to exclude the status from the children...
          fwFsmTree_setNodeLabel(sectorChambers[s], strltrim(sectorChambers[s], \"MDTPS_\"));
      }
      DebugN(\"Labels set for \" + partition + side[s] + \" \" + layers[l]);
    }
  }
  if (partition == \"B\")
    partition = \"Barrel\";
  if (partition == \"E\")
    partition = \"Endcaps\";
  DebugN(\"----- Labels set for \" + partition + \" -----\");
}" 0
 E E E
13 9
"PUSH_BUTTON5"
""
1 52 342 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
16 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  50 340 384 364

T 
2
LANG:10001 19 Set panels to nodes
LANG:1 19 Set panels to nodes
"main()
{
  string partition = mdtPs_getSystemPartition();
  dyn_string side = makeDynString(\"A\", \"C\");
  dyn_string layers, sectorChambers, chamberChannels, exceptionInfo;
  string sector;
  
  if (partition == \"B\")
    layers = makeDynString(\"INNER\", \"MIDDLE\", \"OUTER\");
  else if (partition == \"E\")
    layers = makeDynString(\"INNER\", \"MIDDLE\", \"OUTER\", \"EE\");
  
  for (int s=1; s<=dynlen(side); s++)
  {
    fwFsmTree_setNodePanel(\"MDTPS_\" + partition + side[s], \"fwAtlasMainPanels/mdtPs/ATL_MDTPS_\" + partition + \"X.pnl\");
    for(int l=1; l<=dynlen(layers); l++)
    {
      fwFsmTree_setNodePanel(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l], \"fwAtlasMainPanels/mdtPs/ATL_MDTPS_\" + partition + \"X_LAYER.pnl\");
      for (int n=1; n<=16; n++)
      {
        if (n<10)
          sector = \"0\" + n;
        else
          sector = n;
        fwFsmTree_setNodePanel(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l] + \"_SECTOR\" + sector, \"fwAtlasMainPanels/mdtPs/ATL_MDTPS_SECTOR.pnl\");
        fwTree_getChildren(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l] + \"_SECTOR\" + sector, sectorChambers, exceptionInfo);
//         DebugN(sectorChambers);
        for (int s=2; s<=dynlen(sectorChambers); s++) //to exclude the status from the children...
        {
          fwFsmTree_setNodePanel(sectorChambers[s], \"fwAtlasMainPanels/mdtPs/ATL_MDTPS_CHAMBER.pnl\");
//           DebugN(sectorChambers[s]);
          fwTree_getChildren(sectorChambers[s], chamberChannels, exceptionInfo);
          for (int c=2; c<=dynlen(chamberChannels); c++) //to exclude the status from the children...
          {
            fwFsmTree_setNodePanel(chamberChannels[c], \"fwAtlasMainPanels/mdtPs/ATL_MDTPS_CHANNEL.pnl\");
//             DebugN(chamberChannels[c]);
          }
        }
      }
      if ((layers[l] == \"MIDDLE\") || (layers[l] == \"OUTER\")) {
        fwFsmTree_setNodePanel(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l] + \"_RPC\", \"fwAtlasMainPanels/mdtPs/ATL_MDTPS_SECTOR.pnl\");
        fwTree_getChildren(\"MDTPS_\" + partition + side[s] + \"_\" + layers[l] + \"_RPC\", sectorChambers, exceptionInfo);
        for (int s=2; s<=dynlen(sectorChambers); s++) { //to exclude the status from the children... 
          fwFsmTree_setNodePanel(sectorChambers[s], \"fwAtlasMainPanels/mdtPs/ATL_MDTPS_CHAMBER.pnl\");
          strreplace(sectorChambers[s], \"MDTPS_\", \"\");
          fwFsmTree_setNodePanel(sectorChambers[s] + \"_LV\", \"fwAtlasMainPanels/mdtPs/ATL_MDTPS_CHANNEL.pnl\");
        }
      }
      DebugN(\"Panels set for \" + partition + side[s] + \" \" + layers[l]);
    }
  }
  if (partition == \"B\")
    partition = \"Barrel\";
  if (partition == \"E\")
    partition = \"Endcaps\";
  DebugN(\"----- Panels set for \" + partition + \" -----\");
}" 0
 E E E
2 10
"PRIMITIVE_TEXT4"
""
1 32 372 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 32 372 459 417
0 2 2 "0s" 0 0 0 192 0 0  32 372 3
2
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0 2
LANG:10001 73 After having used any of the above buttons, REGENERATE FMS and start the 
LANG:1 73 After having used any of the above buttons, REGENERATE FMS and start the 
2
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0 2
LANG:10001 71 state archiving from the archiveHandling.pnl. After doing so press the 
LANG:1 71 state archiving from the archiveHandling.pnl. After doing so press the 
2
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0 2
LANG:10001 57 following button so that the alias is set for the states:
LANG:1 57 following button so that the alias is set for the states:
13 11
"PUSH_BUTTON6"
""
1 52 432 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
18 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  50 430 384 454

T 
2
LANG:10001 32 Set state alias for the channels
LANG:1 32 Set state alias for the channels
"main()
{
//   string partition = mdtPs_getSystemPartition();
//   dyn_string side = makeDynString(\"A\", \"C\");
  
  dyn_string channelStates, parts;
  string chamber, channelType;
  
  dynAppend(channelStates, dpNames(getSystemName() + \"*|???????_LV\", \"_FwFsmDevice\"));
  dynAppend(channelStates, dpNames(getSystemName() + \"*|???????_ML1\", \"_FwFsmDevice\"));
  dynAppend(channelStates, dpNames(getSystemName() + \"*|???????_ML2\", \"_FwFsmDevice\"));
//   DebugN(channelStates);
  for (int c=1; c<=dynlen(channelStates); c++){
    parts = strsplit(channelStates[c], \"|\");
    chamber = substr(parts[2], 0, 7);
    channelType = substr(parts[2], 8);
    if (channelType == \"ML1\")
      channelType = \"1\";
    else if (channelType == \"ML2\")
      channelType = \"2\";
    dpSetAlias(channelStates[c] + \".fsm.currentState\", \"PS_STATE__\" + chamber + \"_\" + channelType);
    DebugN(\"Alias set for \" + channelStates[c]);
  }
  DebugN(\"----- End of alias setting -----\");
}" 0
 E E E
2 13
"PRIMITIVE_TEXT5"
""
1 32 462 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
20 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  1 E 32 462 456 507
0 2 2 "0s" 0 0 0 192 0 0  32 462 3
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 71 To set alias on HV channels DP level in the form PS_HV__<chamber>_<ml>:
LANG:1 71 To set alias on HV channels DP level in the form PS_HV__<chamber>_<ml>:
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 0 
LANG:1 0 
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 2
LANG:10001 0 
LANG:1 0 
13 14
"PUSH_BUTTON8"
""
1 220 492 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
21 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
2
LANG:10001 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  218 490 380 514

T 
2
LANG:10001 27 Empty alias HV channels DPs
LANG:1 27 Empty alias HV channels DPs
"main()
{  
  //\"ATLMDTPS2:CAEN/PSMDT02/branchController00/easyCrate0/easyBoard01/channel000.:_common\"
  // PS_HV__<chamber>_<ml>
  workingText.text(\"Working...\");
  workingState.color(\"advanceAlarmWentUna\");
  dyn_string allChannels =  mdtPs_getAllChannels();
  dyn_string chamber = mdtPs_getChambersOfChannel(allChannels[1]);
  int dpSetStatus;
  //   dpSetAlias(allChannels[1] + \".:_common\", \"PS_HV__\"+mdtPs_removeSystemName(chamber[1])+\"_\"+chamber[dynlen(chamber)]);
  DebugN(\"----- Start of alias setting -----\");
  for (int c=1; c<=dynlen(allChannels); c++){
    dyn_string chamber = mdtPs_getChambersOfChannel(allChannels[c]);
    if (chamber[dynlen(chamber)] != \"LV\"){
      dpSetStatus = dpSetAlias(allChannels[c] + \".:_common\", \"\");
      DebugN(allChannels[c] + \".:_common\");
      if (dpSetStatus == 0) DebugN(\"Alias set to \\\"\\\" for PS_HV__\"+mdtPs_removeSystemName(chamber[1])+\"_\"+chamber[dynlen(chamber)]); 
      else DebugN(\"Problem for \"+mdtPs_removeSystemName(chamber[1])+\"_\"+chamber[dynlen(chamber)]); 
    }
  }
  DebugN(\"----- End of alias Clearing -----\");
    workingState.color(\"_Button\");
  workingText.text(\"DONE!\");
  workingText.color(\"black\");
}" 0
 E E E
7 15
"workingState"
""
1 185 560 E E E 1 E 1 E N "_Button" E N "_Button" E E
 E E
22 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E 1 0 1 3 -3 1 E 185 560 65 20
2 16
"workingText"
""
1 160 550 E E E 1 E 1 E N "_Button" E N "_Window" E E
 E E
23 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 160 550 237 564
0 2 2 "0s" 0 0 0 192 0 0  160 550 1
2
LANG:10001 35 MS Shell Dlg 2,-1,12,5,75,0,0,0,0,0
LANG:1 34 MS Shell Dlg 2,9,-1,5,75,0,0,0,0,0
0 2
LANG:10001 11 Working....
LANG:1 11 Working....
0
LAYER, 1 
1
LANG:10001 0 
0
LAYER, 2 
1
LANG:10001 0 
0
LAYER, 3 
1
LANG:10001 0 
0
LAYER, 4 
1
LANG:10001 0 
0
LAYER, 5 
1
LANG:10001 0 
0
LAYER, 6 
1
LANG:10001 0 
0
LAYER, 7 
1
LANG:10001 0 
0
0
