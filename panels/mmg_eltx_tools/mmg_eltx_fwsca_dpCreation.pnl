V 14
2
LANG:10001 0 
LANG:1 0 
PANEL,-1 -1 775 559 N "FwAtlasBg" 0
"main()
{
    addLogoNTUABNL(580,490);

}" 0
 E E E E 1 -1 -1 0  -191.3149253731343 0
""0  1
E "#uses \"CtrlXml\"
#uses \"mmg_eltx_lib/mmgEltx.ctl\"
#uses \"fwSca/fwScaConfigParser.ctl\"
#uses \"fwSca/fwScaCreateDpts.ctl\"


string detectorTechnology=\"MMG\";

dyn_string analogItemsWithCalculatedVariable(string configFileName)
{
  string searchInputName=\"ai\";
  string inputSystemName=\"AnalogInputSystem\";
  string xmlSectionToSearch=\"AnalogInput\";

  string errMsg;
  int errLine;
  int errColumn;
  int docNum =
    xmlDocumentFromFile (configFileName, errMsg, errLine, errColumn);


 int firstNode = xmlFirstChild (docNum);
  if (firstNode < 0)
    {
      DebugN (\"Cant get the first child of the config file.\");
      return -1;
    }
  while (xmlNodeName (docNum, firstNode) != \"configuration\")
    {
      firstNode = xmlNextSibling (docNum, firstNode);
      if (firstNode < 0)
	{
	  DebugTN (\"configuration node not found, sorry.\");
	  return -1;
	}
    }
  // now firstNode holds configuration node
  dyn_int numberOfBoards = fwSca_getChildNodesWithName (docNum, firstNode, \"SCA\");
  dyn_int numberOfInput;

  int inputSystemChild;

  string name;
  string boardName;
  dyn_string inputChildItem;

  dyn_string allInputsItems;

  dyn_uint numberOfSystemsPerSca;
  string nodeName;

  int nodeToSearchIn;
  bool didFindSystem=FALSE;

  int CalculatedVariableChild;
  int CalculatedVariableItemCounter=1;
  dyn_string CalculatedVariableItem;
  dyn_string finalDpesWithCalculatedVariable;

  for (int i = 1; i <= dynlen (numberOfBoards); i++)
    {
       xmlGetElementAttribute (docNum,numberOfBoards[i], \"name\", boardName);
       inputSystemChild=xmlFirstChild (docNum, numberOfBoards[i]);

       xmlChildNodes(docNum, numberOfBoards[i],numberOfSystemsPerSca);

        didFindSystem=FALSE;
       for(int z=1;z<=dynlen(numberOfSystemsPerSca);z++)
         {
           nodeName=xmlNodeName(docNum,numberOfSystemsPerSca[z]);
         if(nodeName==inputSystemName)
           {
          nodeToSearchIn=numberOfSystemsPerSca[z];
          didFindSystem=TRUE;
          break;
           }
       } //numberOfSystemsPerSca

       if(didFindSystem)
       {

       numberOfInput=fwSca_getChildNodesWithName(docNum, nodeToSearchIn, xmlSectionToSearch);

       dynClear(inputChildItem);
       dynClear(allInputsItems);
       dynClear(CalculatedVariableItem);

       for(int j=1;j<=dynlen(numberOfInput);j++)
        {
         xmlGetElementAttribute (docNum,numberOfInput[j], \"name\", name);
         inputChildItem[j]=name;

         CalculatedVariableChild=xmlFirstChild (docNum, numberOfInput[j]);

         if(CalculatedVariableChild!=-1)
         {
           xmlGetElementAttribute (docNum,CalculatedVariableChild, \"name\", CalculatedVariableItem[j]);
           dynAppend(finalDpesWithCalculatedVariable,boardName+\"/\"+searchInputName+\"/\"+inputChildItem[j]+\".\"+CalculatedVariableItem[j]);
          }
          else
          {
             CalculatedVariableItem[j]=\"\";
          }

        } //numberOfInput

       }
      else
       {
          DebugTN(\"ERROR\",\"Did not find system \"+inputSystemName+\" inside Board \"+boardName+\" of OPC UA Server XML file! | Check XML file.\");
       }
      }    //numberOfBoards

      xmlCloseDocument(docNum);

      return finalDpesWithCalculatedVariable;

}

dyn_string inputItemsListPerSystem(string configFileName,string xmlSectionToSearch)
{

  string searchInputName;
  string inputSystemName;
  if(xmlSectionToSearch==\"AnalogInput\")
  {
     searchInputName=\"ai\";
     inputSystemName=\"AnalogInputSystem\";
   }
  if(xmlSectionToSearch==\"DigitalIO\")
  {
     searchInputName=\"gpio\";
     inputSystemName=\"DigitalIOSystem\";
   }


  string errMsg;
  int errLine;
  int errColumn;
//   string configFileName=\"/home/bb5user/Documents/ATLNSWELTX/scripts/examples/ScaOpcUa/config16L1DDC16MMFE8_new.xml\";
  int docNum =
    xmlDocumentFromFile (configFileName, errMsg, errLine, errColumn);


 int firstNode = xmlFirstChild (docNum);
  if (firstNode < 0)
    {
      DebugN (\"Cant get the first child of the config file.\");
      return -1;
    }
  while (xmlNodeName (docNum, firstNode) != \"configuration\")
    {
      firstNode = xmlNextSibling (docNum, firstNode);
      if (firstNode < 0)
	{
	  DebugTN (\"configuration node not found, sorry.\");
	  return -1;
	}
    }
  // now firstNode holds configuration node
  dyn_int numberOfBoards = fwSca_getChildNodesWithName (docNum, firstNode, \"SCA\");
  dyn_int numberOfInput;

  int inputSystemChild;

  string name;
  string boardName;
  dyn_string inputChildItem;

  dyn_string allInputsItems;

  dyn_uint numberOfSystemsPerSca;
  string nodeName;

  int nodeToSearchIn;
  bool didFindSystem=FALSE;

  for (int i = 1; i <= dynlen (numberOfBoards); i++)
    {
       xmlGetElementAttribute (docNum,numberOfBoards[i], \"name\", boardName);
       inputSystemChild=xmlFirstChild (docNum, numberOfBoards[i]);

       xmlChildNodes(docNum, numberOfBoards[i],numberOfSystemsPerSca);

        didFindSystem=FALSE;
       for(int z=1;z<=dynlen(numberOfSystemsPerSca);z++)
         {
           nodeName=xmlNodeName(docNum,numberOfSystemsPerSca[z]);
         if(nodeName==inputSystemName)
           {
          nodeToSearchIn=numberOfSystemsPerSca[z];
          didFindSystem=TRUE;
          break;
           }
       } //numberOfSystemsPerSca

       if(didFindSystem)
       {

       numberOfInput=fwSca_getChildNodesWithName(docNum, nodeToSearchIn, xmlSectionToSearch);

       dynClear(inputChildItem);
       dynClear(allInputsItems);

       for(int j=1;j<=dynlen(numberOfInput);j++)
        {
         xmlGetElementAttribute (docNum,numberOfInput[j], \"name\", name);
         inputChildItem[j]=name;
         dynAppend(allInputsItems,boardName+\"/\"+searchInputName+\"/\"+inputChildItem[j]);

        } //numberOfInput

//         DebugN(boardName,dynlen(allInputsItems));
       }
      else
       {
          DebugTN(\"ERROR\",\"Did not find system \"+inputSystemName+\" inside Board \"+boardName+\" of OPC UA Server XML file! | Check XML file.\");
       }
      }    //numberOfBoards

      xmlCloseDocument(docNum);
      return allInputsItems;

}

int countInputItemsPerSystemPerBoard(string configFileName,string xmlSectionToSearch,string boardToSearch)
{

  string searchInputName;
  string inputSystemName;
  if(xmlSectionToSearch==\"AnalogInput\")
  {
     searchInputName=\"ai\";
     inputSystemName=\"AnalogInputSystem\";
   }
  if(xmlSectionToSearch==\"DigitalIO\")
  {
     searchInputName=\"gpio\";
     inputSystemName=\"DigitalIOSystem\";
   }


  string errMsg;
  int errLine;
  int errColumn;
//   string configFileName=\"/home/bb5user/Documents/ATLNSWELTX/scripts/examples/ScaOpcUa/config16L1DDC16MMFE8_new.xml\";
  int docNum =
    xmlDocumentFromFile (configFileName, errMsg, errLine, errColumn);


 int firstNode = xmlFirstChild (docNum);
  if (firstNode < 0)
    {
      DebugN (\"Cant get the first child of the config file.\");
      return -1;
    }
  while (xmlNodeName (docNum, firstNode) != \"configuration\")
    {
      firstNode = xmlNextSibling (docNum, firstNode);
      if (firstNode < 0)
	{
	  DebugTN (\"configuration node not found, sorry.\");
	  return -1;
	}
    }
  // now firstNode holds configuration node
  dyn_int numberOfBoards = fwSca_getChildNodesWithName (docNum, firstNode, \"SCA\");
  dyn_int numberOfInput;

  int inputSystemChild;

  string name;
  string boardName;
  dyn_string inputChildItem;

  dyn_string allInputsItems;

  dyn_uint numberOfSystemsPerSca;
  string nodeName;

  int nodeToSearchIn;
  bool didFindSystem=FALSE;

  bool didFindBoard=FALSE;

  for (int i = 1; i <= dynlen (numberOfBoards); i++)
    {
       xmlGetElementAttribute (docNum,numberOfBoards[i], \"name\", boardName);

       if(boardName==boardToSearch)
       {
       didFindBoard=TRUE;
       inputSystemChild=xmlFirstChild (docNum, numberOfBoards[i]);

       xmlChildNodes(docNum, numberOfBoards[i],numberOfSystemsPerSca);

        didFindSystem=FALSE;
       for(int z=1;z<=dynlen(numberOfSystemsPerSca);z++)
         {
           nodeName=xmlNodeName(docNum,numberOfSystemsPerSca[z]);
         if(nodeName==inputSystemName)
           {
          nodeToSearchIn=numberOfSystemsPerSca[z];
          didFindSystem=TRUE;
          break;
           }
         } //numberOfSystemsPerSca

      if(didFindSystem)
       {

       numberOfInput=fwSca_getChildNodesWithName(docNum, nodeToSearchIn, xmlSectionToSearch);

       }
      else
       {
          DebugTN(\"ERROR\",\"Did not find system \"+inputSystemName+\" inside Board \"+boardName+\" of OPC UA Server XML file! | Check XML file.\");
       }
      }    //numberOfBoards

     }
  if(!didFindBoard)   DebugTN(\"ERROR\",\"Did not find board \"+boardToSearch+\" inside OPC UA Server XML file! | Check XML file.\");

     xmlCloseDocument(docNum);

  return dynlen(numberOfInput);

}

dyn_string inputItemsPerSystemPerBoard(string configFileName,string xmlSectionToSearch,string boardToSearch)
{

  string searchInputName;
  string inputSystemName;
  if(xmlSectionToSearch==\"AnalogInput\")
  {
     searchInputName=\"ai\";
     inputSystemName=\"AnalogInputSystem\";
   }
  if(xmlSectionToSearch==\"DigitalIO\")
  {
     searchInputName=\"gpio\";
     inputSystemName=\"DigitalIOSystem\";
   }


  string errMsg;
  int errLine;
  int errColumn;
//   string configFileName=\"/home/bb5user/Documents/ATLNSWELTX/scripts/examples/ScaOpcUa/config16L1DDC16MMFE8_new.xml\";
  int docNum =
    xmlDocumentFromFile (configFileName, errMsg, errLine, errColumn);


 int firstNode = xmlFirstChild (docNum);
  if (firstNode < 0)
    {
      DebugN (\"Cant get the first child of the config file.\");
      return -1;
    }
  while (xmlNodeName (docNum, firstNode) != \"configuration\")
    {
      firstNode = xmlNextSibling (docNum, firstNode);
      if (firstNode < 0)
	{
	  DebugTN (\"configuration node not found, sorry.\");
	  return -1;
	}
    }
  // now firstNode holds configuration node
  dyn_int numberOfBoards = fwSca_getChildNodesWithName (docNum, firstNode, \"SCA\");
  dyn_int numberOfInput;

  int inputSystemChild;

  string name;
  string boardName;
  dyn_string inputChildItem;

  dyn_string allInputsItems;

  dyn_uint numberOfSystemsPerSca;
  string nodeName;

  int nodeToSearchIn;
  bool didFindSystem=FALSE;

  bool didFindBoard=FALSE;

  for (int i = 1; i <= dynlen (numberOfBoards); i++)
    {
       xmlGetElementAttribute (docNum,numberOfBoards[i], \"name\", boardName);

       if(boardName==boardToSearch)
       {
       didFindBoard=TRUE;
       inputSystemChild=xmlFirstChild (docNum, numberOfBoards[i]);

       xmlChildNodes(docNum, numberOfBoards[i],numberOfSystemsPerSca);

        didFindSystem=FALSE;
       for(int z=1;z<=dynlen(numberOfSystemsPerSca);z++)
         {
           nodeName=xmlNodeName(docNum,numberOfSystemsPerSca[z]);
         if(nodeName==inputSystemName)
           {
          nodeToSearchIn=numberOfSystemsPerSca[z];
          didFindSystem=TRUE;
          break;
           }
         } //numberOfSystemsPerSca

      if(didFindSystem)
       {

       numberOfInput=fwSca_getChildNodesWithName(docNum, nodeToSearchIn, xmlSectionToSearch);

       dynClear(inputChildItem);
       dynClear(allInputsItems);

       for(int j=1;j<=dynlen(numberOfInput);j++)
        {
         xmlGetElementAttribute (docNum,numberOfInput[j], \"name\", name);
         inputChildItem[j]=name;
         dynAppend(allInputsItems,boardName+\"/\"+searchInputName+\"/\"+inputChildItem[j]);

        } //numberOfInput
       }
      else
       {
          DebugTN(\"ERROR\",\"Did not find system \"+inputSystemName+\" inside Board \"+boardName+\" of OPC UA Server XML file! | Check XML file.\");
       }
      }    //numberOfBoards

     }
  if(!didFindBoard)   DebugTN(\"ERROR\",\"Did not find board \"+boardToSearch+\" inside OPC UA Server XML file! | Check XML file.\");

     xmlCloseDocument(docNum);

  return allInputsItems;

}

dyn_string boardsTotal(string configFileName)
{
  string errMsg;
  int errLine;
  int errColumn;
//   string configFileName=\"/home/bb5user/Documents/ATLNSWELTX/scripts/examples/ScaOpcUa/config16L1DDC16MMFE8_new.xml\";
  int docNum =
    xmlDocumentFromFile (configFileName, errMsg, errLine, errColumn);



 int firstNode = xmlFirstChild (docNum);
  if (firstNode < 0)
    {
      DebugN (\"Cant get the first child of the config file.\");
      return -1;
    }
  while (xmlNodeName (docNum, firstNode) != \"configuration\")
    {
      firstNode = xmlNextSibling (docNum, firstNode);
      if (firstNode < 0)
	{
	  DebugTN (\"configuration node not found, sorry.\");
	  return -1;
	}
    }
  // now firstNode holds configuration node
  dyn_int numberOfBoards = fwSca_getChildNodesWithName (docNum, firstNode, \"SCA\");

  string boardName;
  dyn_string boardsTotalList;


  for (int i = 1; i <= dynlen (numberOfBoards); i++)
    {
       xmlGetElementAttribute (docNum,numberOfBoards[i], \"name\", boardName);
       dynAppend(boardsTotalList,boardName);

       } //numberOfBoards

  xmlCloseDocument(docNum);
  return boardsTotalList;

}



" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:10001 0 
2 1
"PRIMITIVE_TEXT7"
""
1 190.75 7.65625 E E E 1 E 1 E N "FwAtlasBg" E N "_Window" E E
 E E
1 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 190.75 7.65625 470 33
0 2 2 "0s" 0 0 0 192 0 0  190.75 7.65625 1
2
LANG:10001 27 Utopia,-1,21,5,75,0,0,0,0,0
LANG:1 27 Utopia,-1,21,5,75,0,0,0,0,0
0 2
LANG:10001 25 XML->Analog Items DPT Fix
LANG:1 25 XML->Analog Items DPT Fix
13 2
"PUSH_BUTTON1"
""
1 29 116 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
2 0 0 0 0 0
E E E
8
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignNone"
2
LANG:10001 32 Utopia,-1,13,5,75,0,0,0,0,0,Bold
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0  27 102 338 136

T 
2
LANG:10001 18 Display SCA Boards
LANG:1 22 Display SCA-Boards IDs
"main(mapping event)
{
   string path=filePath.text();
   dyn_string boards=boardsTotal(path);


   dyn_string boardSum;
   dyn_int boardCounter;
   int mmfe8Counter=0;
   int l1ddcCounter=0;
   int addcCounter=0;
   int boardTypeCounter=0;

   totalBoardList.deleteAllLines();
   boardSumTable.deleteAllLines();

   dyn_bool flagBoard=FALSE;




   for(int i=1;i<=dynlen(boards);i++)
    {

        totalBoardList.appendLine(\"Num\",i,\"Boards\",boards[i]);


        if(uniPatternMatch(\"*MMFE8*\",boards[i]))
        {
          mmfe8Counter++;
          boardCounter[1]=mmfe8Counter;
          boardSum[1]=\"MMFE8\";
          flagBoard[1]=TRUE;
        }

        if(uniPatternMatch(\"*ADDC*\",boards[i]))
        {
          l1ddcCounter++;
          boardCounter[2]=l1ddcCounter;
          boardSum[2]=\"L1DDC\";
          flagBoard[2]=TRUE;
        }

        if(uniPatternMatch(\"*L1DDC*\",boards[i]))
        {
          addcCounter++;
          boardCounter[3]=addcCounter;
          boardSum[3]=\"ADDC\";
          flagBoard[3]=TRUE;
        }

    }

   totalBoards.text(dynlen(boards));

   for(int i=1;i<=dynlen(boardSum);i++)
    {
      if(flagBoard[i]) boardSumTable.appendLine(\"Board\",boardSum[i],\"Sum\",boardCounter[i]);
     }


}" 0
 E E E
13 3
"closeButton"
""
1 683 462 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
3 0 0 0 0 0
E E E
8
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignNone"
2
LANG:10001 27 Utopia,-1,16,5,75,0,0,0,0,0
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  681 452.3 743.25 478.3

T 
2
LANG:10001 5 Close
LANG:1 5 Close
"main(mapping event)
{
  PanelOff();
}" 0
 E E E
25 11
"totalBoardList"
""
1 29 142 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
11 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignNone"
2
LANG:10001 27 Utopia,-1,12,5,50,0,0,0,0,0
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0  27 140 337.9999999999999 413.0000000000001
EE 1 0 1 2 0 "Num" 2 1 0 "s" 2
LANG:10001 3 Num
LANG:1 3 Num
E
2
LANG:10001 0 
LANG:1 0 

32 "Boards" 24 1 0 "[0s,,,AlignHCenter]" 2
LANG:10001 6 Boards
LANG:1 6 Boards
E
2
LANG:10001 0 
LANG:1 0 

275 
15 15 10 0
2
LANG:10001 27 Utopia,-1,12,5,50,0,0,0,0,0
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0 0 1 0 1 7
1 0
2 13
"PRIMITIVE_TEXT8"
""
1 271 444 E E E 1 E 1 E N "White" E N "_Window" E E
 E E
13 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 271 444 314 461
0 2 2 "0s" 0 0 0 192 0 0  271 444 1
2
LANG:10001 27 Utopia,-1,15,5,75,0,0,0,0,0
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0 2
LANG:10001 6 Total:
LANG:1 6 Total:
14 14
"totalBoards"
""
1 267 467 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
14 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignNone"
2
LANG:10001 27 Utopia,-1,15,5,75,0,0,0,0,0
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  265 462 319 491
3 "0s" 0 0 0 1 0 -1  E E E
30 24
"FRAME3"
""
1 280 53 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
24 0 0 0 0 0
E E E
1
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 1.034375 0 5.792207792207793 -272.625 -216.9870129870131 0 E 280 53 601 131
2
LANG:10001 31 Sans Serif,-1,12,5,50,0,0,0,0,0
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0 2
LANG:10001 0 
LANG:1 0 
2 26
"PRIMITIVE_TEXT14"
""
1 43 65 E E E 1 E 1 E N "White" E N "_Window" E E
 E E
26 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 43 65 111 82
0 2 2 "0s" 0 0 0 192 0 0  43 65 1
2
LANG:10001 27 Utopia,-1,15,5,75,0,0,0,0,0
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0 2
LANG:10001 9 XML File:
LANG:1 9 XML File:
14 27
"filePath"
""
1 112 68 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
27 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignNone"
2
LANG:10001 27 Utopia,-1,12,5,50,0,0,0,0,0
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0  110 61 709 86
3 "0s" 0 0 0 0 0 -1  E "main()
{
  this.text(PROJ_PATH+\"config/\");
}" 0
 E
13 28
"PUSH_BUTTON7"
""
1 720 67 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
28 0 0 0 0 0
E E E
8
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignNone"
2
LANG:10001 31 Sans Serif,-1,12,5,50,0,0,0,0,0
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0  718 59 753 88

P 
4294967295
"pictures/folderNew.png"
2
LANG:10001 12 PUSH_BUTTON7
LANG:1 12 PUSH_BUTTON7
"main(mapping event)
{
 string fileDirectory;
 fileSelector(fileDirectory, filePath.text(),false, \"*.xml\", false, \"MyId\");
 filePath.text(fileDirectory);

    totalBoardList.deleteAllLines();
    boardSumTable.deleteAllLines();

}" 0
 E E E
25 33
"boardSumTable"
""
1 33 128 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
33 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignNone"
2
LANG:10001 27 Utopia,-1,12,5,50,0,0,0,0,0
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0  30 432 244 529
EE 1 0 1 2 0 "Board" 10 1 0 "s" 2
LANG:10001 5 Board
LANG:1 5 Board
E
2
LANG:10001 0 
LANG:1 0 

128 "Sum" 6 1 0 "s" 2
LANG:10001 3 Sum
LANG:1 3 Sum
E
2
LANG:10001 0 
LANG:1 0 

80 
15 15 10 0
2
LANG:10001 27 Utopia,-1,12,5,50,0,0,0,0,0
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0 0 1 0 1 7
1 0
2 34
"PRIMITIVE_TEXT6"
""
1 24 11 E E E 1 E 1 E N "White" E N "_Transparent" E E
 E E
34 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  1 E 24 11 656 36
0 2 2 "0s" 0 0 0 192 0 0  24 11 1
2
LANG:10001 32 Utopia,-1,21,5,75,0,0,0,0,0,Bold
LANG:1 33 MS Shell Dlg,-1,19,5,75,0,0,0,0,0
0 2
LANG:10001 57 ATLAS MMG  DCS  ---  ELTX PROJECT   :  DPEs CONFIGURATION
LANG:1 56 ATLAS MDT  DCS  ---  ELTX PROJECT   :  FSM CONFIGURATION
4 35
"LINE2"
""
1 10 3 E E E 1 E 1 E N "White" E N {255,255,255} E E
 E E
35 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E  10 3 730 3
4 36
"LINE3"
""
1 10 3 E E E 1 E 1 E N "White" E N {255,255,255} E E
 E E
36 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E  10 3 10 43
4 37
"LINE4"
""
1 10 43 E E E 1 E 1 E N "White" E N {255,255,255} E E
 E E
37 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E  10 43 770 43
4 38
"LINE6"
""
1 730 3 E E E 1 E 1 E N "White" E N {255,255,255} E E
 E E
38 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E  730 3 730 23
4 39
"LINE7"
""
1 730 23 E E E 1 E 1 E N "White" E N {255,255,255} E E
 E E
39 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E  730 23 770 23
4 40
"LINE8"
""
1 770 23 E E E 1 E 1 E N "White" E N {255,255,255} E E
 E E
40 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E  770 23 770 43
2 41
"PRIMITIVE_TEXT15"
""
1 735 5 E E E 1 E 1 E N "White" E N "_Transparent" E E
 E E
41 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  1 E 735 5 772 20
0 2 2 "0s" 0 0 0 192 0 0  735 5 1
2
LANG:10001 32 Utopia,-1,13,5,75,0,0,0,0,0,Bold
LANG:1 33 MS Shell Dlg,-1,11,5,75,1,0,0,0,0
0 2
LANG:10001 3 MMG
LANG:1 3 MDT
30 42
"FRAME4"
""
1 280 53 E E E 1 E 1 E N "White" E N {0,0,0} E E
 E E
42 0 0 0 0 0
E E E
1
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 1.00274953358209 0 0.9610389610389609 122.2301305970148 113.0649350649351 0 E 280 53 601 131
2
LANG:10001 32 Utopia,-1,13,5,75,0,0,0,0,0,Bold
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0 2
LANG:10001 18 fwSca-DPE Creation
LANG:1 0 
13 43
"PUSH_BUTTON9"
""
1 430 194 E E E 1 E 1 E N "WF_Error" E N "_Button" E E
 E E
43 0 0 0 0 0
E E E
8
1
LANG:10001 0 

1
"layoutAlignment" "AlignNone"
1
LANG:10001 32 Utopia,-1,13,5,75,0,0,0,0,0,Bold
0  428 187 685 221

T 
1
LANG:10001 12 Create [dev]
"main(mapping event)
{

  string source=filePath.text();
//   string fileOriginal=source;
//   string fileNew=source;
//   strreplace(fileNew,\".xml\",\"_EXTENDED.xml\");
//   system(\"xmllint --noent \"+fileOriginal+\" > \"+fileNew);

//   int dpeStatus=fwSca_parseConfig(fileNew,TRUE,TRUE,FALSE);
  int dpeStatus=fwSca_parseConfig(source,FALSE,FALSE,FALSE);


  DebugN(\"********* SCA Datapoint Creation ------> \"+dpeStatus);

}" 0
 E E E
30 44
"FRAME5"
""
1 280 53 E E E 1 E 1 E N "White" E N {0,0,0} E E
 E E
44 0 0 0 0 0
E E E
1
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 1.00274953358209 0 1.818181818181818 122.2301305970148 169.6363636363636 0 E 280 53 601 131
2
LANG:10001 32 Utopia,-1,13,5,75,0,0,0,0,0,Bold
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0 2
LANG:10001 22 Power/Temperature DPEs
LANG:1 0 
13 45
"PUSH_BUTTON10"
""
1 426 356 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
45 0 0 0 0 0
E E E
8
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignNone"
2
LANG:10001 32 Utopia,-1,13,5,75,0,0,0,0,0,Bold
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0  424 342 680 376

T 
2
LANG:10001 22 Assign OPC to PW/Temp 
LANG:1 18 Display Calculated
"main()
{

   string path=filePath.text();
   dyn_string boards=boardsTotal(path);

   dyn_string analogItemsMMFE8,analogItemsL1DDC,analogItemsADDC;

   dpGet(\"MMG_ELTX_MMFE8.AnalogItems\",analogItemsMMFE8);
   dpGet(\"MMG_ELTX_L1DDC.AnalogItems\",analogItemsL1DDC);
   dpGet(\"MMG_ELTX_ADDC.AnalogItems\",analogItemsADDC);

   string dpe,address;


   for(int i=1;i<=dynlen(boards);i++)
    {


        if(uniPatternMatch(\"*MMFE8*\",boards[i]))
        {
           for(int z=1;z<=dynlen(analogItemsMMFE8);z++)
           {
            dpe=detectortTechnology+\"_\"+boards[i]+\"/\"+analogItemsMMFE8[z];
            address=boards[i]+\"/\"+analogItemsMMFE8[z];
            strreplace(address, \"/\", \".\");
            fwSca_addressConfigWrapper(dpe,address,DPATTR_ADDR_MODE_INPUT_SPONT);
           }

        }

        if(uniPatternMatch(\"*ADDC*\",boards[i]))
        {
           for(int z=1;z<=dynlen(analogItemsADDC);z++)
           {
            dpe=detectortTechnology+\"_\"+boards[i]+\"/\"+analogItemsADDC[z];
            address=boards[i]+\"/\"+analogItemsADDC[z];
            strreplace(address, \"/\", \".\");
            fwSca_addressConfigWrapper(dpe,address,DPATTR_ADDR_MODE_INPUT_SPONT);
           }
        }

        if(uniPatternMatch(\"*L1DDC*\",boards[i]))
        {
           for(int z=1;z<=dynlen(analogItemsL1DDC);z++)
           {
            dpe=detectortTechnology+\"_\"+boards[i]+\"/\"+analogItemsL1DDC[z];
            address=boards[i]+\"/\"+analogItemsL1DDC[z];
            strreplace(address, \"/\", \".\");
            fwSca_addressConfigWrapper(dpe,address,DPATTR_ADDR_MODE_INPUT_SPONT);
           }
        }

    }

  DebugTN(\"Assign of Power/Temperature OPC UA Address:\",\"READY\");
}
" 0
 E E E
1 54 0 "" 2
0
13 49
"PUSH_BUTTON11"
""
1 393 491 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
46 0 0 0 0 0
E E E
8
1
LANG:10001 0 

1
"layoutAlignment" "AlignNone"
1
LANG:10001 32 Utopia,-1,13,5,75,0,0,0,0,0,Bold
0  424 293 680 327

T 
1
LANG:10001 31 Create Calculated Variables DPs
"main(mapping event)
{

  string dpType=\"fwScaAnalogInputCalculatedVariables\";

  dyn_dyn_string elements;
  dyn_dyn_int types;

     elements[1]=makeDynString(dpType,\"\");
     elements[2]=makeDynString(\"\",\"power\");
     elements[3]=makeDynString(\"\",\"temperature\");

     types[1]=makeDynInt(DPEL_STRUCT);
     types[2]=makeDynInt(0,DPEL_FLOAT);
     types[3]=makeDynInt(0,DPEL_FLOAT);

  dpTypeCreate(elements,types);

  dyn_string analogItemListofAllSCA;
  analogItemListofAllSCA=dpNames(\"*\",\"fwScaAnalogInput\");

  for(int i=1;i<=dynlen(analogItemListofAllSCA);i++)
  {
    strreplace(analogItemListofAllSCA[i],getSystemName(),\"\");
  }

  for(int i=1;i<=dynlen(analogItemListofAllSCA);i++)
  {
    dpCreate(detectorTechnology+\"_\"+analogItemListofAllSCA[i],dpType);
  }


}


" 0
 E E E
30 53
"FRAME6"
""
1 280 53 E E E 1 E 1 E N "White" E N {0,0,0} E E
 E E
47 0 0 0 0 0
E E E
1
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 2.29375 0 0.6103896103896107 -612.2500000000001 13.6493506493506 0 E 280 53 601 131
2
LANG:10001 32 Utopia,-1,13,5,75,0,0,0,0,0,Bold
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0 2
LANG:10001 0 
LANG:1 0 
0
LAYER, 1 
1
LANG:10001 0 
0
LAYER, 2 
1
LANG:10001 0 
0
LAYER, 3 
1
LANG:10001 0 
0
LAYER, 4 
1
LANG:10001 0 
0
LAYER, 5 
1
LANG:10001 0 
0
LAYER, 6 
1
LANG:10001 0 
0
LAYER, 7 
1
LANG:10001 0 
0
3 0 "PANEL_REF1" -1
"layoutAlignment" "AlignNone"
"" ""
"objects/fwAccessControl/fwAccessControl_CurrentUser.pnl" 275 475 T 46 1 0 1 273 -377
0
0
