V 14
1
LANG:10001 0 
PANEL,-1 -1 112 125 N "_3DFace" 2
"$sector"
"$side"
E E E E E 1 -1 -1 0  0 0
""0  1
E "string sector=$sector;
string side=$side;


void checkIfMappingSectorExists(string sectorShape)
{

  bool mappingOk=TRUE;
  string channel,type;

  dyn_string axial = makeDynString(\"Z2\",\"Z3\");
  dyn_string radial= makeDynString(\"R1\",\"R2\");

  int board;
  int pcbStart, pcbEnd;
  int countObjects;

      for(int i_axial = 1; i_axial <= 2; i_axial++)
      { if(!mappingOk) break;
        for(int i_radial =1 ; i_radial <= 2; i_radial++)
        { if(!mappingOk) break;
          for(int layer=1;layer<=4;layer++)
            { if(!mappingOk) break;
                if(i_radial==1)  //XM1
                {
                  pcbStart=1;
                  pcbEnd=5;
                }
                if(i_radial==2)  //XM2
                {
                  pcbStart=6;
                  pcbEnd=8;
                }

            if(layer==1 || layer==4)
              {
                for(int pcb=pcbStart;pcb<=pcbEnd;pcb++)
                  { if(!mappingOk) break;
                 if(pcb==3 || pcb==4 || pcb==5 || pcb==6) // L1DDC, ADDC(Digital) + MMFE8(Analog)
                    { if(!mappingOk) break;
                      for(int board=1;board<=4;board++)
                      {
                        if(!mappingOk) break;
                        dpGet(\"MMG_Side\"+side+\".Sector\"+sectorShape+\".\"+axial[i_axial]+\".\"+radial[i_radial]+\".Layer\"+layer+\".PCB\"+pcb+\".Board\"+board+\".info.channel\",channel);
                        if(channel==\"\")
                        {
                          mappingOk=FALSE;
                          break;
                        }
                      }
                    }
                      else // MMFE8(Analog)
                    {
                   if(layer==1)   board=1; //Left
                   if(layer==4)   board=2; //Left
                        if(!mappingOk) break;
                        dpGet(\"MMG_Side\"+side+\".Sector\"+sectorShape+\".\"+axial[i_axial]+\".\"+radial[i_radial]+\".Layer\"+layer+\".PCB\"+pcb+\".Board\"+board+\".info.channel\",channel);
                        if(channel==\"\")
                        {
                          mappingOk=FALSE;
                          break;
                        }
                   if(layer==1)   board=4; //Right
                   if(layer==4)   board=3; //Right
                        if(!mappingOk) break;
                        dpGet(\"MMG_Side\"+side+\".Sector\"+sectorShape+\".\"+axial[i_axial]+\".\"+radial[i_radial]+\".Layer\"+layer+\".PCB\"+pcb+\".Board\"+board+\".info.channel\",channel);
                        if(channel==\"\")
                        {
                          mappingOk=FALSE;
                          break;
                        }
                    }
              }
            }//layer 1/4
            if(layer==2 || layer==3)
              {
                for(int pcb=pcbStart;pcb<=pcbEnd;pcb++)
                { if(!mappingOk) break;
                 if(layer==2)   board=2; //Left
                 if(layer==3)   board=1; //Left
                        if(!mappingOk) break;
                        dpGet(\"MMG_Side\"+side+\".Sector\"+sectorShape+\".\"+axial[i_axial]+\".\"+radial[i_radial]+\".Layer\"+layer+\".PCB\"+pcb+\".Board\"+board+\".info.channel\",channel);
                        if(channel==\"\")
                        {
                          mappingOk=FALSE;
                          break;
                        }
                 if(layer==2)   board=3; //Right
                 if(layer==3)   board=4; //Right
                        if(!mappingOk) break;
                        dpGet(\"MMG_Side\"+side+\".Sector\"+sectorShape+\".\"+axial[i_axial]+\".\"+radial[i_radial]+\".Layer\"+layer+\".PCB\"+pcb+\".Board\"+board+\".info.channel\",channel);
                        if(channel==\"\")
                        {
                          mappingOk=FALSE;
                          break;
                        }
                }
              }//layer 2/3

         }//layer
        }//radial R1,R2
      }//axial Z2,Z3


  if(mappingOk)
    setValue(\"S\"+sectorShape,\"backCol\",\"green\");
  else
    setValue(\"S\"+sectorShape,\"backCol\",\"red\");

}


void clickAndReset(){

 for(int i=1;i<=16;i++)
  {
    if(i<=9)
      checkIfMappingSectorExists(\"0\"+i);
    else
   checkIfMappingSectorExists(i);
  }

  this.backCol(\"grey\");
}


void clearShapes(){

    for(int i=1;i<=4;i++)
  {
  removeSymbol(myModuleName(), myPanelName(),\"Layer\"+i);
  removeSymbol(myModuleName(), myPanelName(),\"Board\"+i);
  if(i==2 || i==3)
   removeSymbol(myModuleName(), myPanelName(),\"Z\"+i);

  }
}

void clearBoardInfo()
{
  channelInfo.text(\"\");
  typeInfo.text(\"\");
}" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:10001 0 
10 0
"SL1"
""
1 78 142 E E E 1 E 1 E N "_WindowText" E N {255,255,255} E E
 E E
0 0 0 0 0 0
E E "main(bool enter)
{
  this.toolTipText(\"Sector \"+sector);
}
" 0

0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
   this.name(\"S\"+sector);
   checkIfMappingSectorExists(sector);
}" 0
 "main(mapping event)
{
          clearShapes();
          clickAndReset();
          clearBoardInfo();
          addSymbol(myModuleName(),myPanelName(),\"/objects/axialMapping.pnl\",\"Z2\",makeDynString(\"$sector:\"+$sector,\"$axial:\"+\"Z2\",\"$side:\"+side), 400, 60);
          addSymbol(myModuleName(),myPanelName(),\"/objects/axialMapping.pnl\",\"Z3\",makeDynString(\"$sector:\"+$sector,\"$axial:\"+\"Z3\",\"$side:\"+side), 550, 60);
 }" 0
 0 1 1 0 1 E 0.8125 0 0.816666666666667 -64.25 -114.9666666666667 1 E 4 78 142
158 142
138 262
98 262
 1
0
LAYER, 1 
1
LANG:10001 0 
0
LAYER, 2 
1
LANG:10001 0 
0
LAYER, 3 
1
LANG:10001 0 
0
LAYER, 4 
1
LANG:10001 0 
0
LAYER, 5 
1
LANG:10001 0 
0
LAYER, 6 
1
LANG:10001 0 
0
LAYER, 7 
1
LANG:10001 0 
0
0
