V 14
1
LANG:1 0 
PANEL,-1 -1 476 219 N "_3DFace" 4
"$componentName"
"$fileComponentName"
"$fileComponentVersion"
"$strDependentNames"
"/**
  This panel displays the list of the components which require the component being deleted ( component deletion ) 
  or the list with components which are not installed and required by the component being installed ( component installation ).

  Required $-parameters:

  $strDependentNames - string - the names of components, separated with |, which require the component being deleted ( deleting ), the names of components=versions, separated by |, which require the comonent being installed (installing)
  $componentName - string - the name of the component which requires other components ( installing ) or is required by other components ( deleting )

  Panels called from this panel:

  none
*/

// ------------------------------------------------------------------------------------------------

main()
{
  dyn_string dsComponentNames;
  dyn_string dsComponentVersions;
  if(isDollarDefined(\"$fileComponentName\") && isDollarDefined(\"$fileComponentVersion\")){
    dsComponentNames = getList($fileComponentName);
    dsComponentVersions = getList($fileComponentVersion);
  }
  int dsComponentNamesLen = dynlen(dsComponentNames);
  
  int countAvailableToInstall;
  dyn_string dsDependentComponents = getList($strDependentNames);
  int dsDependentComponentsLen = dynlen(dsDependentComponents);
  for(int i=1;i<=dsDependentComponentsLen;i++){
    dyn_string dsComponentNameVersion = strsplit(dsDependentComponents[i], \"=\");
    string sDependentComponentName = dsComponentNameVersion[1];
    string sRequiredVersion = \"N/A\";
    if(dynlen(dsComponentNameVersion) > 1){
      sRequiredVersion = dsComponentNameVersion[2];
    }
    
    string sAvailableVersion = getAvailableVersion(sDependentComponentName, dsComponentNamesLen,
                                                   dsComponentNames, dsComponentVersions);
    bool matchRequirements = (sAvailableVersion != \"\") &&
            (_fwInstallation_CompareVersions(sAvailableVersion, sRequiredVersion, false, false, true) == 1);
    if(matchRequirements){
      countAvailableToInstall++;
    }
    appendRequirementToTable(sDependentComponentName, sRequiredVersion, sAvailableVersion, matchRequirements);
  }
  updateRequiredComponentsTable();
  
  updateTopLabel($componentName, dsDependentComponentsLen > 1);
  updateAvailabilityInfoLabel(countAvailableToInstall, dsDependentComponentsLen);
  updateActionButtons(countAvailableToInstall, dsDependentComponentsLen);
}

void appendRequirementToTable(string requiredComponentName, string requiredComponentVersion, string availableComponentVersion, bool matchRequirements){
  requiredComponentsTable.appendLine(\"name\", requiredComponentName, \"requiredVersion\", requiredComponentVersion,
                                     \"availableVersion\", availableComponentVersion);
  if(matchRequirements){
    return;
  }
  int lineNum = requiredComponentsTable.lineCount();
  requiredComponentsTable.cellForeColRC(lineNum - 1, \"name\", \"red\");
  requiredComponentsTable.cellForeColRC(lineNum - 1, \"requiredVersion\", \"red\");
  requiredComponentsTable.cellForeColRC(lineNum - 1, \"availableVersion\", \"red\");
}

void updateRequiredComponentsTable(){
  requiredComponentsTable.adjustColumn(0);
  requiredComponentsTable.adjustColumn(1);
  requiredComponentsTable.columnStretchable(2, true);
}

void updateTopLabel(string componentName, bool multipleRequired){
  txtWarning1.text = componentName + \" requires the following component version\" + (multipleRequired?\"s\":\"\") + \":\";
}

void updateAvailabilityInfoLabel(int availableComponentsNum, int requiredComponentsNum){
  if(availableComponentsNum == requiredComponentsNum){
    return;
  }
  string availablilityInfoText = (availableComponentsNum<=0?\"None of the\":
                                  ((string)availableComponentsNum + \"/\" + (string)requiredComponentsNum));
  availablilityInfoText += \" required components \" + (availableComponentsNum>1?\"are\":\"is\") + \" available in required version.\";
    
  txtAvailabilityInfo.text = availablilityInfoText;
  txtAvailabilityInfo.color = \"red\";
}

void updateActionButtons(int availableComponentsNum, int requiredComponentsNum){
  if(availableComponentsNum == 0){
    installAllButton.visible = false;
  }else if(availableComponentsNum != requiredComponentsNum){
    installAllButton.text = \"Install available\";
  }
}

dyn_string getList(string elementsString){
  return strsplit(elementsString, \"|\");
}

string getAvailableVersion(string componentName, int dsComponentsLen, const dyn_string &dsComponentNames, const dyn_string &dsComponentVersions){
  for(int i=1;i<=dsComponentsLen;i++){
    if(patternMatch(componentName, dsComponentNames[i])){
      return dsComponentVersions[i];
    }
  }
  return \"\";
}

" 0
 E E E E 1 -1 -1 0  120 20
""0  1
E E 3
"CBRef" "1"
"EClose" "main()
{
  // Overwriting default panel Close script to disable closing of the panel when Close button is clicked.
}
" 0

"dpi" "96"
1 1 0 0 0 0 1 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 1
"txtWarning1"
""
1 75.5 9.5 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E 0.9984350547730829 0 0.9743589743589743 -5.881846635367759 0.2435897435897438 0 E 77.5 11.5 393 27
0 2 0 "0s" 0 0 0 192 0 0  77.5 11.5 1
1
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0 1
LANG:1 52 Component requires the following component versions:
13 6
"installButton"
""
1 229.6630434782609 229.625 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 56 Install only original component without any dependencies

1
"layoutAlignment" "AlignCenter"
1
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0  132.5 184.5 306.5 211.5

T 
1
LANG:1 28 Install without dependencies
"main()
{
  dyn_float dfVal = makeDynFloat(1);
  dyn_string dsVal = makeDynString(\"Install_Delete\");
  
  // return values to the parent panel
  PanelOffReturn(dfVal, dsVal);
}


" 0
 E E E
13 5
"cancelButton"
""
1 392.5 186.5 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 30 No component will be installed

1
"layoutAlignment" "AlignCenter"
1
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0  390.5 184.5 468.5 211.5

T 
1
LANG:1 6 Cancel
"main()
{
  dyn_float dfVal = makeDynFloat(1);
  dyn_string dsVal = makeDynString(\"DoNotInstall_DoNotDelete\");
  
  // return values to the parent panel
  PanelOffReturn(dfVal, dsVal);
}

" 0
 E E E
13 11
"installAllButton"
""
1 311.5 186.5 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 40 Install all available component versions

1
"layoutAlignment" "AlignCenter"
1
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0  309.5 184.5 387.5 211.5

T 
1
LANG:1 11 Install all
"main()
{
  dyn_float dfVal = makeDynFloat(1);
  dyn_string dsVal = makeDynString(\"InstallAll_DeleteAll\");
  
  // return values to the parent panel
  PanelOffReturn(dfVal, dsVal);
}


" 0
 E E E
25 18
"requiredComponentsTable"
""
1 69 35 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0  67 33 468 155
EE 1 0 1 3 0 "name" 20 1 0 "s" 1
LANG:1 4 Name
E
1
LANG:1 0 

235 "requiredVersion" 6 1 0 "s" 1
LANG:1 8 Required
E
1
LANG:1 16 Required version

75 "availableVersion" 6 1 0 "s" 1
LANG:1 9 Available
E
1
LANG:1 17 Available version

75 
20 20 10 0
1
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0 0 2 0 4 7
1 0
6 19
"backgroundRectangle"
""
1 110 10 E E E 1 E 1 E N "_Transparent" E N "FwInstallationCorporateColor" E E
 E E
16 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"sizePolicy" "Preferred Expanding"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E 0.7972972972972973 0 0.9121338912133892 0 0 1 E 0 0 74 239
6 20
"warningIcon"
""
1 10 20 E E E 1 E 1 E N "_Transparent" E N "_Transparent" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

5
"minimumSize" "40 40"
"maximumSize" "40 40"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E 1.026315789473684 0 1.026315789473684 -10.02631578947368 7.894736842105267 2  0 0  "pictures/warning_nt.xpm" 4294967295 E 20 80 58 118
32 21
"SPACER1"
""
1 395 9 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
18 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 395 9 466 28 1
2 22
"txtAvailabilityInfo"
""
1 71 162 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 1 2 1 E U  0 E 71 162 288 177
0 2 2 "0s" 0 0 0 192 0 0  71 162 1
1
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0 1
LANG:1 37 All required components are available
32 23
"SPACER2"
""
1 297 160 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 297 160 466 179 1
32 24
"SPACER3"
""
1 69 186 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 69 186 127 209 1
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
4 0 "LAYOUT_GROUP1" 4
2 0 
1 21 

"S 1" "0 0 1 1"
"S 21" "1 0 1 1"
"" ""
0 1 0 0
4 1 "LAYOUT_GROUP2" 4
1 0 
18 

"S 18" "0 0 1 1"
"" ""
0 1 0 0
4 2 "LAYOUT_GROUP3" 4
2 0 
22 23 

"S 22" "0 0 1 1"
"S 23" "1 0 1 1"
"" ""
0 1 0 0
4 3 "LAYOUT_GROUP4" 4
4 0 
24 6 11 5 

"S 24" "0 0 1 1"
"S 6" "1 0 1 1"
"S 11" "2 0 1 1"
"S 5" "3 0 1 1"
"" ""
0 1 0 0
4 4 "LAYOUT_GROUP5" -1
0 4 

0 3 1 2 
"G 0" "0 0 1 1"
"G 3" "3 0 1 1"
"G 1" "1 0 1 1"
"G 2" "2 0 1 1"
"" ""
0 2 1 9 9 9 9 0
4 5 "LAYOUT_GROUP6" -1
2 0 
19 20 

"S 20" "0 0 1 1"
"" ""
1 1 0 0
0
